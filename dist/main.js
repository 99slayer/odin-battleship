(()=>{"use strict";const e=e=>{for(let t=0;t<11;t+=1){let l=t,n=document.createElement("div");n.classList.add("grid-row"),n.setAttribute("id",`grid-row-${t}`),n.setAttribute("data-row-number",`${t}`);for(let e=0;e<11;e+=1){let t=document.createElement("div");t.classList.add("grid-cell"),t.setAttribute("id",`grid-cell-${e}-${l}`),t.setAttribute("data-cell-coordinate",`${e}-${l}`),t.style.border="1px solid black",n.appendChild(t)}e.appendChild(n)}(()=>{const t=[];e.childNodes.forEach((e=>{t.push(e.firstChild)}));let l=1;t.forEach((e=>{e.style.border="none","0-0"!==e.getAttribute("data-cell-coordinate")&&(e.textContent=`${l}`,l+=1)}))})(),(()=>{const t=e.firstChild.childNodes;let l=0;t.forEach((e=>{e.style.border="none","0-0"!==e.getAttribute("data-cell-coordinate")&&(e.textContent=`${String.fromCharCode(65+l)}`,l+=1)}))})()},t=(e,t=!1)=>{const l=e,n=(()=>{const e=[],t=[];return{attacks:t,place:t=>{let l=(e=>{let t=e,l=t.length,n=0;return{coordinates:t,hit:()=>{n+=1},isSunk:()=>l===n,getDamage:()=>n}})(t);return e.push(l),l},receiveAttack:l=>{if(t.includes(l))return;let n=e.findIndex((e=>e.coordinates.includes(l)));n>-1&&e[n].hit(),t.push(l)},fleetCoordinates:()=>{const t=[];for(let l=0;l<e.length;l+=1)t.push(e[l].coordinates);return t},isFleetSunk:()=>!!e.every((e=>e.isSunk()))}})();return{board:n,makeAttack:(e,l=null)=>{let n=l;t&&(n=((e,t=1)=>{const l=()=>Math.floor(10*Math.random())+65;let n=String.fromCharCode(l()),r=Math.floor(10*Math.random()+1),a=n+r;if(e.attacks.includes(a))do{n=String.fromCharCode(l()),r=Math.floor(10*Math.random()+1),a=n+r}while(e.attacks.includes(a));return a})(e)),e.attacks.includes(n)?console.log("square has already been hit."):e.receiveAttack(n)},getName:()=>l,getWins:()=>0}},l=document.getElementById("menu-multiplayer"),n=document.getElementById("menu-names");document.getElementById("menu-rules");let r=!1;const a=e=>{e.style.display="none"},d=e=>{e.style.display=null};let o,c;(()=>{const e=document.getElementById("single-player"),i=document.getElementById("two-player"),s=document.getElementById("player-one-name"),u=document.getElementById("start");e.addEventListener("click",(()=>{a(l),d(n),r=!1})),i.addEventListener("click",(()=>{a(l),d(n),r=!0})),u.addEventListener("click",(()=>{o=t(s.value),c=t("computer",!0),s.value="",a(n)}))})(),o.board.place(["A2","A3","A4"]),o.board.place(["E3","F3","G3"]),o.board.place(["A1","B1","C1","D1"]),o.board.place(["C10","D10","E10","F10"]),c.board.place(["A4","B4","C4"]),c.board.place(["A5","A6","A7"]),c.board.place(["E5","F5","G5","H5"]),c.board.place(["E6","E7","E8","E9"]),console.log("check check");const i=document.getElementById("computer-grid"),s=document.getElementById("player-grid");e(i),e(s)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,